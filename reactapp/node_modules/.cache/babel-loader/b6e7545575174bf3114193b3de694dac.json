{"ast":null,"code":"var _jsxFileName = \"/home/ndrbax/GitHub/repositories/pprojets/Mymoviz/reactapp/src/components/Movie.js\";\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport { Button, Col, Card, CardImg, CardBody, CardTitle, CardText, Badge, ButtonGroup } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faStar, faVideo } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Movie(props) {\n  /* Pour pouvoir initialiser un Ã©tat Ã  lâ€™intÃ©rieur de notre composant, il faut importer la fonction (useState) permettant d'initialiser lâ€™Ã©tat et son setteur. Cette fonction est appelÃ©e Hook dâ€™Ã©tat */\n  const [watchMovie, setWatchMovie] = useState(false);\n  const [countWatchMovie, setCountWatchMovie] = useState(0);\n  const [myRatingMovie, setMyRatingMovie] = useState(0);\n  const [isRatingMovie, setIsRatingMovie] = useState(false);\n  const [rating, setRating] = useState(props.globalRating);\n  const [countRating, setCountRating] = useState(props.globalCountRating); // ðŸ‘‰ GrÃ¢ce Ã  la mÃ©canique des propriÃ©tÃ©s, faites transiter cette mÃ©thode aux diffÃ©rents composants Movie\n\n  var changeLiked = (name, img) => {\n    if (props.movieSee == true) {\n      props.handleClickDeleteMovieParent(name);\n    } else {\n      props.handleClickAddMovieParent(name, img);\n    }\n  };\n\n  var addWatch = () => {\n    setWatchMovie(true);\n    setCountWatchMovie(countWatchMovie + 1);\n  };\n\n  var setMyRating = rating => {\n    if (rating < 0) {\n      rating = 0;\n    }\n\n    if (rating > 10) {\n      rating = 10;\n    }\n\n    setMyRatingMovie(rating);\n    setIsRatingMovie(true);\n  };\n\n  var tabRating = [];\n\n  for (var i = 0; i < 10; i++) {\n    var color = {};\n\n    if (i < myRatingMovie) {\n      color = {\n        color: \"#f1c40f\"\n      };\n    }\n\n    let count = i + 1;\n    tabRating.push(React.createElement(FontAwesomeIcon, {\n      onClick: () => setMyRating(count),\n      style: color,\n      icon: faStar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n  var nbTotalNote = rating * countRating;\n  var nbTotalVote = countRating;\n\n  if (isRatingMovie) {\n    nbTotalVote += 1;\n    nbTotalNote += myRatingMovie;\n  }\n\n  var avgTotal = Math.round(nbTotalNote / nbTotalVote);\n  var tabGlobalRating = [];\n\n  for (var i = 0; i < 10; i++) {\n    var color = {};\n\n    if (i < avgTotal) {\n      color = {\n        color: \"#f1c40f\"\n      };\n    }\n\n    tabGlobalRating.push(React.createElement(FontAwesomeIcon, {\n      style: color,\n      icon: faStar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n  if (props.movieSee) {\n    var colorLike = {\n      color: \"#e74c3c\",\n      cursor: \"pointer\"\n    };\n  } else {\n    var colorLike = {\n      cursor: \"pointer\"\n    };\n  }\n\n  if (watchMovie) {\n    var colorWatch = {\n      color: \"#e74c3c\"\n    };\n  } else {\n    var colorWatch = {\n      cursor: \"pointer\"\n    };\n  }\n\n  return React.createElement(Col, {\n    xs: \"12\",\n    lg: \"6\",\n    xl: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      marginBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    top: true,\n    src: props.movieImg,\n    alt: props.movieName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Like\", \" \", React.createElement(FontAwesomeIcon, {\n    style: colorLike,\n    icon: faHeart,\n    onClick: () => changeLiked(props.movieName, props.movieImg),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Nombre de vues\", \" \", React.createElement(FontAwesomeIcon, {\n    style: colorWatch,\n    icon: faVideo,\n    onClick: () => addWatch(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), \" \", React.createElement(Badge, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, countWatchMovie)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Mon avis\", tabRating, React.createElement(ButtonGroup, {\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setMyRating(myRatingMovie - 1),\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"-\"), React.createElement(Button, {\n    onClick: () => setMyRating(myRatingMovie + 1),\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"+\"))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Moyenne\", tabGlobalRating, \"(\", nbTotalVote, \")\"), React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, props.movieName), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, props.movieDesc))));\n}\n\nexport default Movie;","map":{"version":3,"sources":["/home/ndrbax/GitHub/repositories/pprojets/Mymoviz/reactapp/src/components/Movie.js"],"names":["React","useState","Button","Col","Card","CardImg","CardBody","CardTitle","CardText","Badge","ButtonGroup","FontAwesomeIcon","faHeart","faStar","faVideo","Movie","props","watchMovie","setWatchMovie","countWatchMovie","setCountWatchMovie","myRatingMovie","setMyRatingMovie","isRatingMovie","setIsRatingMovie","rating","setRating","globalRating","countRating","setCountRating","globalCountRating","changeLiked","name","img","movieSee","handleClickDeleteMovieParent","handleClickAddMovieParent","addWatch","setMyRating","tabRating","i","color","count","push","nbTotalNote","nbTotalVote","avgTotal","Math","round","tabGlobalRating","colorLike","cursor","colorWatch","marginBottom","movieImg","movieName","movieDesc"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\nimport {\n  Button,\n  Col,\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  CardText,\n  Badge,\n  ButtonGroup,\n} from \"reactstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faStar, faVideo } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Movie(props) {\n  /* Pour pouvoir initialiser un Ã©tat Ã  lâ€™intÃ©rieur de notre composant, il faut importer la fonction (useState) permettant d'initialiser lâ€™Ã©tat et son setteur. Cette fonction est appelÃ©e Hook dâ€™Ã©tat */\n  const [watchMovie, setWatchMovie] = useState(false);\n  const [countWatchMovie, setCountWatchMovie] = useState(0);\n  const [myRatingMovie, setMyRatingMovie] = useState(0);\n  const [isRatingMovie, setIsRatingMovie] = useState(false);\n  const [rating, setRating] = useState(props.globalRating);\n  const [countRating, setCountRating] = useState(props.globalCountRating);\n\n  // ðŸ‘‰ GrÃ¢ce Ã  la mÃ©canique des propriÃ©tÃ©s, faites transiter cette mÃ©thode aux diffÃ©rents composants Movie\n  var changeLiked = (name, img) => {\n    if (props.movieSee == true) {\n      props.handleClickDeleteMovieParent(name);\n    } else {\n      props.handleClickAddMovieParent(name, img);\n    }\n  };\n\n  var addWatch = () => {\n    setWatchMovie(true);\n    setCountWatchMovie(countWatchMovie + 1);\n  };\n\n  var setMyRating = (rating) => {\n    if (rating < 0) {\n      rating = 0;\n    }\n\n    if (rating > 10) {\n      rating = 10;\n    }\n\n    setMyRatingMovie(rating);\n    setIsRatingMovie(true);\n  };\n\n  var tabRating = [];\n  for (var i = 0; i < 10; i++) {\n    var color = {};\n    if (i < myRatingMovie) {\n      color = { color: \"#f1c40f\" };\n    }\n    let count = i + 1;\n    tabRating.push(\n      <FontAwesomeIcon\n        onClick={() => setMyRating(count)}\n        style={color}\n        icon={faStar}\n      />\n    );\n  }\n\n  var nbTotalNote = rating * countRating;\n  var nbTotalVote = countRating;\n\n  if (isRatingMovie) {\n    nbTotalVote += 1;\n    nbTotalNote += myRatingMovie;\n  }\n\n  var avgTotal = Math.round(nbTotalNote / nbTotalVote);\n\n  var tabGlobalRating = [];\n  for (var i = 0; i < 10; i++) {\n    var color = {};\n    if (i < avgTotal) {\n      color = { color: \"#f1c40f\" };\n    }\n    tabGlobalRating.push(<FontAwesomeIcon style={color} icon={faStar} />);\n  }\n\n  if (props.movieSee) {\n    var colorLike = { color: \"#e74c3c\", cursor: \"pointer\" };\n  } else {\n    var colorLike = { cursor: \"pointer\" };\n  }\n\n  if (watchMovie) {\n    var colorWatch = { color: \"#e74c3c\" };\n  } else {\n    var colorWatch = { cursor: \"pointer\" };\n  }\n\n  return (\n    <Col xs=\"12\" lg=\"6\" xl=\"4\">\n      <Card style={{ marginBottom: 30 }}>\n        <CardImg top src={props.movieImg} alt={props.movieName} />\n        <CardBody>\n          <p>\n            Like{\" \"}\n            <FontAwesomeIcon\n              style={colorLike}\n              icon={faHeart}\n              onClick={() => changeLiked(props.movieName, props.movieImg)}\n            />\n          </p>\n          <p>\n            Nombre de vues{\" \"}\n            <FontAwesomeIcon\n              style={colorWatch}\n              icon={faVideo}\n              onClick={() => addWatch()}\n            />{\" \"}\n            <Badge color=\"secondary\">{countWatchMovie}</Badge>\n          </p>\n          <p>\n            Mon avis\n            {tabRating}\n            <ButtonGroup size=\"sm\">\n              <Button\n                onClick={() => setMyRating(myRatingMovie - 1)}\n                color=\"secondary\"\n              >\n                -\n              </Button>\n              <Button\n                onClick={() => setMyRating(myRatingMovie + 1)}\n                color=\"secondary\"\n              >\n                +\n              </Button>\n            </ButtonGroup>\n          </p>\n          <p>\n            Moyenne\n            {tabGlobalRating}({nbTotalVote})\n          </p>\n          <CardTitle>{props.movieName}</CardTitle>\n          <CardText>{props.movieDesc}</CardText>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}